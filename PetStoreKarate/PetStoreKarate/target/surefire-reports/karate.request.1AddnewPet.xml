<testsuite failures="0" name="karate/request/1AddnewPet.feature" skipped="0" tests="3" time="2.339085">
  <testcase classname="karate.request.1AddnewPet" name="Check the service POST method" time="1.752813">
    <system-out>* url url ................................................................. passed
* def responseAdd = read('classpath:Karate/request/responseAdd.json' ) .... passed
* def requestCreate = read('classpath:Karate/request/requestBodyAdd.json' ) . passed
Given path 'pet' .......................................................... passed
And request requestCreate ................................................. passed
When method POST .......................................................... passed
Then status 200 ........................................................... passed
And match response == responseAdd ......................................... passed
And assert response.id == requestCreate.id ................................ passed
And assert response.name == requestCreate.name ............................ passed
And assert response.category.id == requestCreate.category.id .............. passed
And assert response.category.name == requestCreate.category.name .......... passed
And assert response.tags.id == requestCreate.tags.id ...................... passed
And assert response.tags.name == requestCreate.tags.name .................. passed
And assert response.status == requestCreate.status ........................ passed</system-out>
  </testcase>
  <testcase classname="karate.request.1AddnewPet" name="POST a pet with values incorrect at id" time="0.294142">
    <system-out>* url url ................................................................. passed
* def responseAdd = read('classpath:Karate/request/responseAdd.json' ) .... passed
* def requestCreate = read('classpath:Karate/request/requestBodyAdd.json' ) . passed
Given path 'pet' .......................................................... passed
And request requestCreate ................................................. passed
When method POST .......................................................... passed
Then status 200 ........................................................... passed
And match response == responseAdd ......................................... passed
And assert response.id == requestCreate.id ................................ passed
And assert response.name == requestCreate.name ............................ passed
And assert response.category.id == requestCreate.category.id .............. passed
And assert response.category.name == requestCreate.category.name .......... passed
And assert response.tags.id == requestCreate.tags.id ...................... passed
And assert response.tags.name == requestCreate.tags.name .................. passed
And assert response.status == requestCreate.status ........................ passed
* url url ................................................................. passed
* def requestBody = {"id": "@$%^", "category": {"id": 22,"name": '#(nameCategory)'},"name": "luna*/_","photoUrls": ["string"],"tags": [{"id":7854,"name": '#(nameTags)'}],"status": "string"} . passed
Given path 'pet' .......................................................... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 500 ........................................................... passed
And match response == {"code": "#number","type": "#string","message": "#string"} . passed</system-out>
  </testcase>
  <testcase classname="karate.request.1AddnewPet" name="POST a pet with values incorrect at id" time="0.29213">
    <system-out>* url url ................................................................. passed
* def responseAdd = read('classpath:Karate/request/responseAdd.json' ) .... passed
* def requestCreate = read('classpath:Karate/request/requestBodyAdd.json' ) . passed
Given path 'pet' .......................................................... passed
And request requestCreate ................................................. passed
When method POST .......................................................... passed
Then status 200 ........................................................... passed
And match response == responseAdd ......................................... passed
And assert response.id == requestCreate.id ................................ passed
And assert response.name == requestCreate.name ............................ passed
And assert response.category.id == requestCreate.category.id .............. passed
And assert response.category.name == requestCreate.category.name .......... passed
And assert response.tags.id == requestCreate.tags.id ...................... passed
And assert response.tags.name == requestCreate.tags.name .................. passed
And assert response.status == requestCreate.status ........................ passed
* url url ................................................................. passed
* def requestBody = {"id": "@$%^", "category": {"id": 22,"name": '#(nameCategory)'},"name": "luna*/_","photoUrls": ["string"],"tags": [{"id":7854,"name": '#(nameTags)'}],"status": "string"} . passed
Given path 'pet' .......................................................... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 500 ........................................................... passed
And match response == {"code": "#number","type": "#string","message": "#string"} . passed
* url url ................................................................. passed
* def requestBody = {"id": "uno", "category": {"id": 22,"name": '#(nameCategory)'},"name": "luna*/_","photoUrls": ["string"],"tags": [{"id":7854,"name": '#(nameTags)'}],"status": "string"} . passed
Given path 'pet' .......................................................... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 500 ........................................................... passed
And match response == {"code": "#number","type": "#string","message": "#string"} . passed</system-out>
  </testcase>
</testsuite>
